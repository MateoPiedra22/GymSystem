[tool:pytest]
# Test discovery
python_files = test_*.py *_test.py
python_classes = Test*
python_functions = test_*

# Test directories
testpaths = tests

# Minimum version
minversion = 6.0

# Add options
addopts = 
    -ra
    --strict-markers
    --strict-config
    --cov=app
    --cov-report=term-missing
    --cov-report=html:htmlcov
    --cov-report=xml
    --cov-fail-under=80
    --tb=short
    -v

# Markers
markers =
    slow: marks tests as slow (deselect with '-m "not slow"')
    integration: marks tests as integration tests
    unit: marks tests as unit tests
    api: marks tests as API tests
    auth: marks tests as authentication tests
    database: marks tests that require database
    redis: marks tests that require Redis
    email: marks tests that require email functionality
    payment: marks tests related to payment processing
    membership: marks tests related to membership functionality
    employee: marks tests related to employee functionality
    class: marks tests related to class functionality
    exercise: marks tests related to exercise functionality
    routine: marks tests related to routine functionality
    report: marks tests related to report functionality

# Ignore warnings
filterwarnings =
    ignore::UserWarning
    ignore::DeprecationWarning
    ignore::PendingDeprecationWarning
    ignore:.*unclosed.*:ResourceWarning

# Environment variables for testing
env =
    ENVIRONMENT = testing
    DATABASE_URL = sqlite:///./test.db
    SECRET_KEY = test-secret-key-for-testing-only
    ACCESS_TOKEN_EXPIRE_MINUTES = 30
    REFRESH_TOKEN_EXPIRE_DAYS = 7
    ALGORITHM = HS256
    TESTING = true
    REDIS_URL = redis://localhost:6379/1
    CELERY_BROKER_URL = redis://localhost:6379/1
    CELERY_RESULT_BACKEND = redis://localhost:6379/1
    EMAIL_ENABLED = false
    RATE_LIMIT_ENABLED = false
    CORS_ORIGINS = ["http://localhost:3000"]

# Asyncio mode
asyncio_mode = auto

# Log level
log_level = INFO

# Console output format
console_output_style = progress

# Timeout for tests (in seconds)
timeout = 300

# Parallel execution
# Uncomment to run tests in parallel (requires pytest-xdist)
# -n auto