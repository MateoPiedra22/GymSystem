# Docker Compose para Desarrollo - Sistema de Gestión de Gimnasio v6.0

services:
  # Base de datos PostgreSQL para desarrollo
  postgres:
    image: postgres:15.5
    container_name: gym_postgres_dev
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${GYM_DB_NAME:-gym_db_dev}
      POSTGRES_USER: ${GYM_DB_USER:-gym_user_dev}
      POSTGRES_PASSWORD: ${GYM_DB_PASSWORD:-gym_dev_password}
      TZ: UTC
    volumes:
      - postgres_dev_data:/var/lib/postgresql/data
    ports:
      - "127.0.0.1:15432:5432"
    networks:
      - gym_dev_network

  # Cache Redis para desarrollo
  redis:
    image: redis:7-alpine
    container_name: gym_redis_dev
    restart: unless-stopped
    command: redis-server --requirepass ${GYM_REDIS_PASSWORD:-redis_dev_password}
    volumes:
      - redis_dev_data:/data
    ports:
      - "127.0.0.1:6379:6379"
    networks:
      - gym_dev_network

  # Backend API para desarrollo
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
      target: development
    container_name: gym_backend_dev
    restart: unless-stopped
    environment:
      - GYM_ENV=development
      - GYM_DEBUG=true
      - TZ=UTC
      - GYM_DB_HOST=postgres
      - GYM_DB_PORT=5432
      - GYM_DB_NAME=${GYM_DB_NAME:-gym_db_dev}
      - GYM_DB_USER=${GYM_DB_USER:-gym_user_dev}
      - GYM_DB_PASSWORD=${GYM_DB_PASSWORD:-gym_dev_password}
      - GYM_DB_SSL_MODE=prefer
      - GYM_REDIS_HOST=redis
      - GYM_REDIS_PORT=6379
      - GYM_REDIS_PASSWORD=${GYM_REDIS_PASSWORD:-redis_dev_password}
      - GYM_SECRET_KEY=${GYM_SECRET_KEY:-dev_secret_key_2024}
      - GYM_JWT_SECRET_KEY=${GYM_JWT_SECRET_KEY:-dev_jwt_secret_key_2024}
      - BACKEND_PORT=8000
      - LOG_LEVEL=debug
      - GYM_CORS_ORIGINS=["http://localhost:3000","http://127.0.0.1:3000"]
    volumes:
      - ./backend:/app
      - backend_dev_logs:/app/logs
      - backend_dev_uploads:/app/uploads
    ports:
      - "127.0.0.1:8000:8000"
    depends_on:
      - postgres
      - redis
    networks:
      - gym_dev_network
    command: ["uvicorn", "main:app", "--host", "0.0.0.0", "--port", "8000", "--reload"]

  # Frontend Web para desarrollo
  frontend:
    build:
      context: ./web
      dockerfile: Dockerfile
      target: development
      args:
        - NODE_ENV=development
        - NEXT_PUBLIC_API_URL=http://localhost:8000/api
    container_name: gym_frontend_dev
    restart: unless-stopped
    environment:
      - NODE_ENV=development
      - NEXT_PUBLIC_API_URL=http://localhost:8000/api
      - NEXT_PUBLIC_ENABLE_DEBUG=true
      - NEXT_PUBLIC_LOG_LEVEL=debug
      - NEXT_PUBLIC_ENABLE_ANALYTICS=false
      - FRONTEND_PORT=3000
      - TZ=UTC
      - PORT=3000
      - HOSTNAME=0.0.0.0
    volumes:
      - ./web:/app
      - /app/node_modules
      - /app/.next
      - frontend_dev_logs:/app/logs
    ports:
      - "127.0.0.1:3000:3000"
    depends_on:
      - backend
    networks:
      - gym_dev_network
    command: ["npm", "run", "dev"]

# Volúmenes para desarrollo
volumes:
  postgres_dev_data:
    driver: local
  redis_dev_data:
    driver: local
  backend_dev_logs:
    driver: local
  backend_dev_uploads:
    driver: local
  frontend_dev_logs:
    driver: local

# Red para desarrollo
networks:
  gym_dev_network:
    driver: bridge 